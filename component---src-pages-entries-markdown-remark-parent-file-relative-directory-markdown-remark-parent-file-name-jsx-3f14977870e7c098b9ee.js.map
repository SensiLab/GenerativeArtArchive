{"version":3,"file":"component---src-pages-entries-markdown-remark-parent-file-relative-directory-markdown-remark-parent-file-name-jsx-3f14977870e7c098b9ee.js","mappings":"oNAkBA,MAbyBA,IAAe,IAAd,KAAEC,GAAMD,EAChC,MAAM,MAAEE,EAAK,aAAEC,EAAY,KAAEC,GAASH,EAEtC,OACEI,EAAAA,cAAA,OAAKC,UCRqB,sDDSxBD,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAIJ,EAAME,UCPG,iDDQjBD,EAAAA,cAAA,OAAKI,IAAKN,EAAcG,UCTR,+CDSsCI,IAAKR,IAC1DA,EAAMS,eAEL,E,6BEmCV,MAvCgBX,IAAe,IAAd,KAAEY,GAAMZ,EACvB,MACMa,GADUC,EAAAA,EAAAA,KAEdC,EAAAA,GAAyBH,IACzBI,MAAMC,KAAKhB,IAAI,CACfC,MAAOD,EAAKiB,YAAYhB,MACxBC,aAAcF,EAAKiB,YAAYC,UAC3BlB,EAAKiB,YAAYC,UAAUC,UAC3B,KACJhB,KAAMH,EAAKG,KACXiB,KAAMpB,EAAKiB,YAAYG,UAEnB,EAACC,EAAqB,EAACC,IAA2BC,EAAAA,EAAAA,UAAS,KAC3D,WAAEC,IAAeC,EAAAA,EAAAA,KAiBvB,OAfAC,EAAAA,EAAAA,YAAU,KACR,GAAmB,QAAfF,EACFF,EAAwBV,OACnB,CACL,MAAMe,EAAkBf,EAA0BgB,QAAQC,IACxD,GAAIA,EAAMT,KAAM,CAEd,OADkBS,EAAMT,KAAKU,MAAM,KAAKd,KAAKe,GAAQA,EAAIC,SACxCC,SAAST,EAC5B,CACA,OAAO,CAAK,IAEdF,EAAwBK,EAC1B,IACC,CAACH,EAAYZ,IAGdR,EAAAA,cAAA,OAAKC,UCxCa,mCDyCfgB,EAAqBL,KAAKhB,GAClBI,EAAAA,cAAC8B,EAAgB,CAACC,IAAKnC,EAAKC,MAAOD,KAAMA,MAE9C,E,UE1CCoC,EAAgB,qCC4D3B,MApDA,SAAcrC,GAAY,IAAX,KAAEsC,GAAMtC,EACrB,MAAM,gBAAEuC,IAAoBC,EAAAA,EAAAA,MACtB,UAAEC,EAAS,QAAEC,EAAO,WAAEC,EAAU,WAAElB,EAAU,gBAAEmB,IAClDlB,EAAAA,EAAAA,MACI,EAACmB,EAAc,EAACC,IAAoBtB,EAAAA,EAAAA,WAAS,GAE7CuB,EAAgBA,KAEpBD,GADsBD,EACU,EAgBlC,OARAlB,EAAAA,EAAAA,YAAU,KACR,GAAIc,EAAW,CACb,MAAMO,EAAWP,EAAUF,GAC3BI,EAAWK,GACXJ,EAAgBI,EAAS,GAC3B,IACC,IAGD3C,EAAAA,cAAC4C,EAAAA,EAAM,CAAC5B,KAAMqB,EAASjB,WAAYA,EAAYyB,YAd5BlB,IACnBY,EAAgBZ,EAAI,GAclB3B,EAAAA,cAAA,OAAKC,UDpCiB,uCCsCpBD,EAAAA,cAAA,OAAKC,UDnCiB,yCCoCnBuC,EACCxC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC8C,EAAO,CAACvC,KAAM0B,EAAKc,eAAelC,YAAYN,OAC/CP,EAAAA,cAAA,UAAQC,UAAW+C,EAAsBC,QAASP,GAAe,MAKnE1C,EAAAA,cAAA,UAAQC,UAAW+C,EAAsBC,QAASP,GAAe,MAMrE1C,EAAAA,cAAA,OACEC,UDrDgB,oCCsDhBiD,wBAAyB,CAAEC,OAAQlB,EAAKc,eAAeK,SAKjE,C","sources":["webpack://generative-art-archive/./src/components/entry-preview-mini.jsx","webpack://generative-art-archive/./src/components/entry-preview-mini.module.css","webpack://generative-art-archive/./src/components/sidebar.jsx","webpack://generative-art-archive/./src/components/sidebar.module.css","webpack://generative-art-archive/./src/pages/entries/{MarkdownRemark.parent__(File)__relativeDirectory}/entry.module.css","webpack://generative-art-archive/./src/pages/entries/{MarkdownRemark.parent__(File)__relativeDirectory}/{MarkdownRemark.parent__(File)__name}.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport * as styles from \"./entry-preview-mini.module.css\";\n\nconst EntryPreviewMini = ({ node }) => {\n  const { title, thumbnailURL, slug } = node;\n\n  return (\n    <div className={styles.previewContainer}>\n      <Link to={slug} className={styles.previewLink}>\n        <img src={thumbnailURL} className={styles.previewImg} alt={title} />\n        {title.toUpperCase()}\n      </Link>\n    </div>\n  );\n};\n\nexport default EntryPreviewMini;\n","// extracted by mini-css-extract-plugin\nexport var previewContainer = \"entry-preview-mini-module--previewContainer--bab95\";\nexport var previewImg = \"entry-preview-mini-module--previewImg--771d6\";\nexport var previewLink = \"entry-preview-mini-module--previewLink--e22d9\";","import React, { useEffect, useState } from \"react\";\n\nimport EntryPreviewMini from \"./entry-preview-mini\";\nimport { useEntriesData } from \"../entry-queries\";\nimport { CATEGORIES_TO_FILTER_MAP } from \"../constants/categories\";\n\nimport { useTag } from \"../contexts/TagContext\";\n\nimport * as styles from \"./sidebar.module.css\";\n\nconst Sidebar = ({ type }) => {\n  const entries = useEntriesData();\n  const entriesFilteredByCategory = entries[\n    CATEGORIES_TO_FILTER_MAP[type]\n  ].nodes.map((node) => ({\n    title: node.frontmatter.title,\n    thumbnailURL: node.frontmatter.thumbnail\n      ? node.frontmatter.thumbnail.publicURL\n      : null,\n    slug: node.slug,\n    tags: node.frontmatter.tags,\n  }));\n  const [entriesFilteredByTag, setEntriesFilteredByTag] = useState([]);\n  const { currentTag } = useTag();\n\n  useEffect(() => {\n    if (currentTag === \"all\") {\n      setEntriesFilteredByTag(entriesFilteredByCategory);\n    } else {\n      const filteredEntries = entriesFilteredByCategory.filter((entry) => {\n        if (entry.tags) {\n          const entryTags = entry.tags.split(\",\").map((tag) => tag.trim());\n          return entryTags.includes(currentTag);\n        }\n        return false;\n      });\n      setEntriesFilteredByTag(filteredEntries);\n    }\n  }, [currentTag, entriesFilteredByCategory]);\n\n  return (\n    <div className={styles.scroller}>\n      {entriesFilteredByTag.map((node) => {\n        return <EntryPreviewMini key={node.title} node={node} />;\n      })}\n    </div>\n  );\n};\n\nexport default Sidebar;\n","// extracted by mini-css-extract-plugin\nexport var scroller = \"sidebar-module--scroller--2a022\";","// extracted by mini-css-extract-plugin\nexport var entryContainer = \"entry-module--entryContainer--4be7b\";\nexport var entryContent = \"entry-module--entryContent--044bc\";\nexport var sidebarButton = \"entry-module--sidebarButton--7a350\";\nexport var sidebarContainer = \"entry-module--sidebarContainer--b1339\";","import React, { useEffect, useState } from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../../../components/layout\";\nimport Sidebar from \"../../../components/sidebar\";\n\nimport { useCategory } from \"../../../contexts/CategoryContext\";\nimport { useTag } from \"../../../contexts/TagContext\";\n\nimport * as styles from \"./entry.module.css\";\n\nfunction Entry({ data }) {\n  const { currentCategory } = useCategory();\n  const { tagObject, allTags, setAllTags, currentTag, handleTagChange } =\n    useTag();\n  const [sidebarIsOpen, setSidebarIsOpen] = useState(true);\n\n  const toggleSidebar = () => {\n    const previousState = sidebarIsOpen;\n    setSidebarIsOpen(!previousState);\n  };\n\n  const tagCallback = (tag) => {\n    handleTagChange(tag);\n  };\n\n  // Set tags based on entries in current category\n  useEffect(() => {\n    if (tagObject) {\n      const tagArray = tagObject[currentCategory];\n      setAllTags(tagArray);\n      handleTagChange(tagArray[0]);\n    }\n  }, []);\n\n  return (\n    <Layout tags={allTags} currentTag={currentTag} tagCallback={tagCallback}>\n      <div className={styles.entryContainer}>\n        {/* Sidebar - Start */}\n        <div className={styles.sidebarContainer}>\n          {sidebarIsOpen ? (\n            <>\n              <Sidebar type={data.markdownRemark.frontmatter.type} />\n              <button className={styles.sidebarButton} onClick={toggleSidebar}>\n                &lt;\n              </button>\n            </>\n          ) : (\n            <button className={styles.sidebarButton} onClick={toggleSidebar}>\n              &gt;\n            </button>\n          )}\n        </div>\n        {/* Sidebar - End */}\n        <div\n          className={styles.entryContent}\n          dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }}\n        />\n      </div>\n    </Layout>\n  );\n}\n\nexport default Entry;\n\nexport const query = graphql`\n  query ($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        title\n        type\n      }\n      html\n    }\n  }\n`;\n"],"names":["_ref","node","title","thumbnailURL","slug","React","className","Link","to","src","alt","toUpperCase","type","entriesFilteredByCategory","useEntriesData","CATEGORIES_TO_FILTER_MAP","nodes","map","frontmatter","thumbnail","publicURL","tags","entriesFilteredByTag","setEntriesFilteredByTag","useState","currentTag","useTag","useEffect","filteredEntries","filter","entry","split","tag","trim","includes","EntryPreviewMini","key","sidebarButton","data","currentCategory","useCategory","tagObject","allTags","setAllTags","handleTagChange","sidebarIsOpen","setSidebarIsOpen","toggleSidebar","tagArray","Layout","tagCallback","Sidebar","markdownRemark","styles","onClick","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}